<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beans.roaststars.model.mapper.AdminMapper">

	<!-- 가입한 아이디 중, 사장 권한 부여를 받기 위해 대기 중인 user의 리스트 반환 -->
	<select id="getAllWaitingForUpgradeUserList" resultMap="adminUserRM">
		<![CDATA[
		select  rs.id, rs.name, rs.business_name, rs.business_no, rs.business_pic,
		rs.enabled
		from 	(select count(authority), username
		from   AUTHORITIES
		group by username
		having count(authority) < 2) au, rs_user rs
		where	rs.id = au.username
		and not business_name is null
		and not business_no is null
		and not business_pic is null]]>
	</select>

	<!-- 멤버 권한 종류가져오기 -->
	<select id="getUserAuthorityList" resultType="String">
		 <![CDATA[select
		distinct(authority)
		from authorities
		where authority <> 'ROLE_ADMIN']]>
	</select>
	
	<!-- 총 권한 대기 회원 수 -->
	<select id="getTotalCountByWaitingMember" resultType="int">
		SELECT
		COUNT(*)
		from authorities
		where authority='ROLE_MEMBER'
	</select>

 	<!--  has a 관계를 위한 userVO resultMap--> 
	<resultMap type="authorityVO" id="adminUserRM">
		<result property="userVO.id" column="id" />
		<result property="userVO.name" column="name" />
		<result property="userVO.nickname" column="nickname" />
		<result property="userVO.tel" column="tel" />
		<result property="userVO.address" column="address" />
		<result property="userVO.businessName" column="business_name" />
		<result property="userVO.businessPic" column="business_pic" />
		<result property="userVO.businessNo" column="business_no" />
		<result property="userVO.enabled" column="enabled" />
	</resultMap>

	<!-- 페이징용 미완 -->
	<select id="findMemberByAuthority" resultMap="adminUserRM">
		<![CDATA[
		select 	id, name, business_name, business_no, business_pic, enabled, rnum
		from	(select  rs.id, rs.name, rs.business_name, rs.business_no, rs.business_pic,
		rs.enabled, row_number() over(order by rs.id desc) as rnum
		from 	(select count(authority), username
				from   AUTHORITIES
				group by username
				having count(authority) < 2) au, rs_user rs 
		where	rs.id = au.username
		and not business_name is null
		and not business_no is null
		and not business_pic is null
		and business_pic <> 'NO IMAGE') ra
		where	rnum between #{pagingBean.startRowNumber} and #{pagingBean.endRowNumber}
		]]>
	</select>
	
 	<!-- 권한 부여하기 -->
	<insert id="grantAuthority" parameterType="string">
		insert into authorities
		values(#{id},#{authority})
	</insert>

</mapper>
